on:
  push:
   branches:
     - master
     - staging
     - develop

name: Continuous integration

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup nodejs
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Install dependencies
        run: npm ci

      - name: Linting and Test
        run: npm run test:prod

      - name: Run Build
        run: npm run build

  # Publish release on push to master
  release-master:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2

      - run: git fetch --all --tags

      - name: Check Release Version
        uses: thebongy/version-check@v1
        with:
          file: package.json
          tagFormat: v${version}
        id: version_check

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/**/*
          tag_name: ${{ steps.version_check.outputs.releaseVersion }}
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.version_check.outputs.releaseVersion }}
          asset_path: ./juno-node-linux-v${releaseVersion}.zip
          asset_name: juno-node-linux-v${releaseVersion}.zip
          asset_content_type: application/zip

  release-staging:
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --all --tags

      - name: Check Release Version
        uses: thebongy/version-check@v1
        with:
          file: package.json
          tagFormat: v${version}-beta
        id: version_check

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/**/*
          tag_name: ${{steps.version_check.outputs.releaseVersion}}
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.version_check.outputs.releaseVersion }}
          asset_path: ./juno-node-linux-v${releaseVersion}-beta.zip
          asset_name: juno-node-linux-v${releaseVersion}-beta.zip
          asset_content_type: application/zip
